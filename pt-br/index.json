[{"content":"Aqui você encontrará alguns posts sobre meus projetos. Não apenas exibindo, mas também explicando o porquê e o como eu desenvolvi cada um deles.\n","date":null,"permalink":"https://blog.p4cs.com.br/pt-br/projects/","section":"","summary":"","title":""},{"content":"O que é o Verse? # Verse é um editor de Markdown web leve, local-first e de código aberto, construído com foco na objetividade e agilidade. Você pode testar em verse.p4cs.com.br.\nPor que Markdown? #Há muito tempo eu detesto usar programas cheios de bloat para escrever – estou falando de você, Microsoft Word –, então por um longo tempo venho procurando alternativas que sejam simples, rápidas e fáceis de usar.\nE então veio o markdown. Com a ascensão da IA nos últimos anos, o markdown inevitavelmente ganhou popularidade, já que é a \u0026ldquo;linguagem\u0026rdquo; em que as IAs nos respondem. Quando comecei a usá-lo, fiquei impressionado com sua simplicidade e eficácia. Para mim, ele lembrava o poder do HTML ou LaTeX, mas com uma curva de aprendizado muito mais suave e menor complexidade. Então, decidi adotá-lo como meu formato principal de escrita.\nO problema #Agora que decidi banir de minha vida os processadores de texto tradicionais, cheios de botões e menus, eu precisava de uma ferramenta para escrever em markdown. Então comecei minha busca por não apenas um editor de markdown, mas uma ferramenta que me permitisse converter meu conteúdo markdown em documentos compartilháveis.\nFerramenta #1 #A primeira ferramenta que testei foi o Notion. Não me entendam mal, o Notion é uma ferramenta realmente poderosa, mas não era o que eu estava procurando. Ele permite exportar seu markdown para PDF, mas as muitas outras features que oferece eram um pouco demais para mim, era fácil de se perder na navegação do app.\nEu só queria uma ferramenta de escrita simples, e o Notion parecia mais uma ferramenta de gerenciamento de projetos que também permitia escrever.\nFerramenta #2 #Depois, testei o Obsidian. Diferente do Notion, o Obsidian de fato se apresenta como um editor de markdown, e faz um ótimo trabalho nesse papel. Então qual foi o problema dessa vez? Novamente, muitos recursos.\nO Obsidian é uma ferramenta incrível por todas as suas capacidades de gerenciamento de conhecimento e plugins da comunidade. Além disso, me permitia exportar anotações como PDF, e até personalizar o CSS do documento exportado (mesmo que eu não tenha conseguido fazer funcionar – muito provavelmente skill issue). E o fato de ter que organizar minhas anotações em um vault (uma estrutura de pastas) me desanimou um pouco.\nFerramenta #3 #Visual Studio Code foi minha próxima tentativa. Eu já usava o VS Code para programar, então por que não usá-lo para escrever também? Ele tem o recurso de Preview do Markdown (que aliás inspirou muito o design do Verse), e com a extensão certa – neste caso markdownpdf do YZane – eu podia exportar meus arquivos markdown em formatos compartilháveis (PDF e imagens), além disso, personalizar o estilo do documento era tão simples quanto criar um arquivo CSS e apontar a extensão para ele nas configurações. Até conseguia usar IA, através do GitHub Copilot, para ajudar na escrita e estilização de documentos.\nEntão, por que parei de usá-lo? Features. Demais. O VS Code é um software incrível, as coisas que você pode fazer com ele são verdadeiramente infinitas. Mas não é uma ferramenta de escrita. É uma ferramenta de programação que pode ser usada para escrever.\nO Insight #Cansei de procurar a ferramenta perfeita por aí. E mesmo que ela possa muito bem existir, por que não construí-la eu mesmo? Afinal de contas, eu tinha alguns requisitos bem inflexíveis pra minha ferramenta de escrita ideal:\nTinha que ser rápida. Tinha que ser simples. Tinha que ser fácil. E assim, minha jornada para construir o Verse começou.\nA Solução (desenvolvendo o Verse) #No início, estava desenvolvendo o Verse como um app nativo para macOS de código fechado, usando SwiftUI. Simplesmente porque queria aprender SwiftUI – e usar liquid glass kkkkk – e pensei que seria uma boa oportunidade para isso. Aqui está uma print de como ficou:\nBem legal, não é? Era simples e fácil de usar. Não tão rápido, mas rápido o suficiente. Até consegui implementar os recursos de IA e personalização de CSS via interface gráfica – mesmo que ainda fosse um pouco desajeitado.\nEntão, por que não lançar o Verse assim? Porque percebi que quanto mais pessoas pudessem usá-lo e mais pessoas pudessem contribuir, o Verse se tornaria uma ferramenta melhor.\nE bem nessa época, li o artigo do PostHog sobre os benefícios do código aberto, e cheguei à conclusão de que tinha que construir o Verse do zero, com código aberto, e de uma forma que pudesse ser usado por qualquer pessoa, em qualquer lugar – o que inevitavelmente me levou à web.\nO Futuro do Verse #O app ainda está nos seus estágios iniciais, e há muito trabalho a ser feito. Mas estou animado com a jornada à frente, e espero que você se junte a mim nela! Confira o repositório do github, e sinta-se à vontade para contribuir com o projeto.\nA curto prazo, quero implementar umas funcionalidades de uso agêntico no assistente de IA, e alguns polimentos no Export, além de umas funcionalidades de estilização.\nTeste o Verse e me diga o que você achou. Os primeiros $2 são por minha conta!\n","date":"30 de agosto, 2025","permalink":"https://blog.p4cs.com.br/pt-br/projects/introducing-verse/","section":"","summary":"","title":"Apresentando, Verse"},{"content":"","date":null,"permalink":"https://blog.p4cs.com.br/pt-br/","section":"P4CS Blog","summary":"","title":"P4CS Blog"},{"content":"","date":null,"permalink":"https://blog.p4cs.com.br/pt-br/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"https://blog.p4cs.com.br/pt-br/tags/","section":"Tags","summary":"","title":"Tags"}]